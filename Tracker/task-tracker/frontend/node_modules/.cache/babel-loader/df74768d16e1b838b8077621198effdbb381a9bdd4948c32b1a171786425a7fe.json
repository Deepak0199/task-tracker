{"ast":null,"code":"// frontend/src/services/api.js\nimport axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'https://stunning-broccoli-7vp5t4pqxgrcr2wj-5000.app.github.dev/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor for auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor for error handling\napi.interceptors.response.use(response => response.data, error => {\n  var _error$response, _error$response2;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error);\n});\n\n// API Service Class\nclass ApiService {\n  // Authentication\n  async login(credentials) {\n    try {\n      const response = await api.post('/auth/login', credentials);\n      if (response.success && response.token) {\n        localStorage.setItem('authToken', response.token);\n        localStorage.setItem('currentUser', JSON.stringify(response.user));\n      }\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  }\n  async logout() {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('currentUser');\n  }\n\n  // Tasks\n  async getTasks(userId, isAdmin = false) {\n    try {\n      const response = await api.get('/tasks', {\n        params: {\n          userId,\n          isAdmin\n        }\n      });\n      return response.tasks || [];\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n      return [];\n    }\n  }\n  async createTask(taskData) {\n    try {\n      const response = await api.post('/tasks', taskData);\n      return response.task;\n    } catch (error) {\n      console.error('Error creating task:', error);\n      throw error;\n    }\n  }\n  async updateTask(taskId, updates) {\n    try {\n      const response = await api.put(`/tasks/${taskId}`, updates);\n      return response.task;\n    } catch (error) {\n      console.error('Error updating task:', error);\n      throw error;\n    }\n  }\n  async deleteTask(taskId) {\n    try {\n      await api.delete(`/tasks/${taskId}`);\n      return true;\n    } catch (error) {\n      console.error('Error deleting task:', error);\n      throw error;\n    }\n  }\n\n  // Subtasks\n  async addSubtask(taskId, subtaskData) {\n    try {\n      const response = await api.post(`/tasks/${taskId}/subtasks`, subtaskData);\n      return response.task;\n    } catch (error) {\n      console.error('Error adding subtask:', error);\n      throw error;\n    }\n  }\n  async updateSubtask(taskId, subtaskId, updates) {\n    try {\n      const response = await api.put(`/tasks/${taskId}/subtasks/${subtaskId}`, updates);\n      return response.task;\n    } catch (error) {\n      console.error('Error updating subtask:', error);\n      throw error;\n    }\n  }\n  async deleteSubtask(taskId, subtaskId) {\n    try {\n      const response = await api.delete(`/tasks/${taskId}/subtasks/${subtaskId}`);\n      return response.task;\n    } catch (error) {\n      console.error('Error deleting subtask:', error);\n      throw error;\n    }\n  }\n\n  // Statistics\n  async getStats(userId, isAdmin = false) {\n    try {\n      const response = await api.get('/stats', {\n        params: {\n          userId,\n          isAdmin\n        }\n      });\n      return response.stats || {};\n    } catch (error) {\n      console.error('Error fetching stats:', error);\n      return {};\n    }\n  }\n}\n\n// Create and export singleton instance\nconst apiService = new ApiService();\nexport default apiService;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","data","_error$response","_error$response2","console","message","ApiService","login","credentials","post","success","setItem","JSON","stringify","user","logout","removeItem","getTasks","userId","isAdmin","get","params","tasks","createTask","taskData","task","updateTask","taskId","updates","put","deleteTask","delete","addSubtask","subtaskData","updateSubtask","subtaskId","deleteSubtask","getStats","stats","apiService"],"sources":["/workspaces/task-tracker/Tracker/task-tracker/frontend/src/services/api.js"],"sourcesContent":["// frontend/src/services/api.js\nimport axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'https://stunning-broccoli-7vp5t4pqxgrcr2wj-5000.app.github.dev/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add request interceptor for auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response.data,\n  (error) => {\n    console.error('API Error:', error.response?.data || error.message);\n    return Promise.reject(error.response?.data || error);\n  }\n);\n\n// API Service Class\nclass ApiService {\n  // Authentication\n  async login(credentials) {\n    try {\n      const response = await api.post('/auth/login', credentials);\n      if (response.success && response.token) {\n        localStorage.setItem('authToken', response.token);\n        localStorage.setItem('currentUser', JSON.stringify(response.user));\n      }\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async logout() {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('currentUser');\n  }\n\n  // Tasks\n  async getTasks(userId, isAdmin = false) {\n    try {\n      const response = await api.get('/tasks', {\n        params: { userId, isAdmin }\n      });\n      return response.tasks || [];\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n      return [];\n    }\n  }\n\n  async createTask(taskData) {\n    try {\n      const response = await api.post('/tasks', taskData);\n      return response.task;\n    } catch (error) {\n      console.error('Error creating task:', error);\n      throw error;\n    }\n  }\n\n  async updateTask(taskId, updates) {\n    try {\n      const response = await api.put(`/tasks/${taskId}`, updates);\n      return response.task;\n    } catch (error) {\n      console.error('Error updating task:', error);\n      throw error;\n    }\n  }\n\n  async deleteTask(taskId) {\n    try {\n      await api.delete(`/tasks/${taskId}`);\n      return true;\n    } catch (error) {\n      console.error('Error deleting task:', error);\n      throw error;\n    }\n  }\n\n  // Subtasks\n  async addSubtask(taskId, subtaskData) {\n    try {\n      const response = await api.post(`/tasks/${taskId}/subtasks`, subtaskData);\n      return response.task;\n    } catch (error) {\n      console.error('Error adding subtask:', error);\n      throw error;\n    }\n  }\n\n  async updateSubtask(taskId, subtaskId, updates) {\n    try {\n      const response = await api.put(`/tasks/${taskId}/subtasks/${subtaskId}`, updates);\n      return response.task;\n    } catch (error) {\n      console.error('Error updating subtask:', error);\n      throw error;\n    }\n  }\n\n  async deleteSubtask(taskId, subtaskId) {\n    try {\n      const response = await api.delete(`/tasks/${taskId}/subtasks/${subtaskId}`);\n      return response.task;\n    } catch (error) {\n      console.error('Error deleting subtask:', error);\n      throw error;\n    }\n  }\n\n  // Statistics\n  async getStats(userId, isAdmin = false) {\n    try {\n      const response = await api.get('/stats', {\n        params: { userId, isAdmin }\n      });\n      return response.stats || {};\n    } catch (error) {\n      console.error('Error fetching stats:', error);\n      return {};\n    }\n  }\n}\n\n// Create and export singleton instance\nconst apiService = new ApiService();\nexport default apiService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}